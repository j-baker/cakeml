INCLUDES = .. ../semantics ../bytecode ../lem_lib_stub ../inference

OPTIONS = QUIT_ON_FAILURE

THYFILES = $(patsubst %Script.sml,%Theory.uo,$(wildcard *.sml))
TARGETS = $(patsubst %.sml,%.uo,$(THYFILES))
all: $(TARGETS)
.PHONY: all

#LEM_OPT = -wl_pat_comp ign  -wl_pat_exh  ign -wl_pat_fail ign -wl_unused_vars ign
LEM_OPT = -suppress_renaming -auxiliary_level none

SEMANTICSI = lib ast semanticPrimitives bigStep
BYTECODEI = bytecode
INFERI = infer_t
COMPILER = modLang conLang decLang exhLang patLang intLang toIntLang toBytecode compiler
GEN_SCRIPTS =  $(patsubst %,%Script.sml,$(COMPILER))

LEMI = $(patsubst %,../semantics/%.lem,$(SEMANTICSI)) $(patsubst %,../bytecode/%.lem,$(BYTECODEI)) $(patsubst %,../inference/%.lem,$(INFERI))
LEMH = $(patsubst %,%.lem,$(COMPILER))

$(GEN_SCRIPTS): $(LEMI) $(LEMH)
	if type lem;\
	then lem $(LEM_OPT) $(patsubst %,-i %,$(LEMI)) $(patsubst %,-hol %,$(LEMH));\
	else touch $(GEN_SCRIPTS); fi

ifdef POLY
HOLHEAP = heap
PARENT_HOLHEAP = ../semantics/heap
EXTRA_CLEANS = $(HOLHEAP) $(HOLHEAP).o
all: $(HOLHEAP)

BARE_THYS = ../semantics/terminationTheory ../bytecode/bytecodeExtraTheory ../inference/infer_tTheory
DEPS = $(patsubst %,%.uo,$(BARE_THYS)) $(PARENT_HOLHEAP)

$(HOLHEAP): $(DEPS)
#	$(protect $(HOLDIR)/bin/buildheap) -b $(PARENT_HOLHEAP) -o $(HOLHEAP) $(BARE_THYS)
	$(protect $(HOLDIR)/bin/buildheap) -o $(HOLHEAP) $(BARE_THYS)
endif
